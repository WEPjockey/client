import java.nio.file.Paths

plugins {
    id 'base'
    id 'com.palantir.git-version' version '0.8.0'
}

version = gitVersion()

evaluationDependsOnChildren()

def binDir = 'bin'
def distDir = 'dist'
def iconDir = 'icons'
def imgDir = 'img'
def libDir = 'lib'
def buildPath = Paths.get(System.getProperty('buildPath', project.buildDir.toPath().resolve(binDir).toAbsolutePath().toString()))
def distPath = Paths.get(System.getProperty('distPath', project.buildDir.toPath().resolve(distDir).toAbsolutePath().toString()))

def buildCommonPath = buildPath.resolve('common')
def buildLinuxPath = buildPath.resolve('linux')

def packageName = "hbox-client-${project.version}-linux_amd64"

task buildBinJar(type: Copy) {
    dependsOn subprojects.jar

    from project('hbox-client-gui').jar
    from project('hbox-client-core').jar
    into buildCommonPath.resolve(binDir)
}

task buildBinLib(type: Copy) {
    from subprojects.configurations.compile
    into buildCommonPath.resolve(libDir)
}

task buildBinIcons(type: Copy) {
    from project('hbox-client-gui').file(iconDir)
    from project('hbox-client-gui').file(imgDir)
    into buildCommonPath.resolve(iconDir)
}

task buildBinCommon {
    dependsOn buildBinJar, buildBinLib, buildBinIcons
}

task buildBinLinux(type: Copy) {
    dependsOn buildBinCommon

    from project.file('scripts/hyperbox')
    from project.file('modules/gui/hyperbox-client.desktop')
    from project.file('scripts/installer/client-installer.sh')
    from buildCommonPath.toString() // using a Path creates a Stack Overflow
    into buildLinuxPath
}

build {
    dependsOn buildBinLinux
}

task distLinuxInstall(type: Exec) {

    doFirst {
        mkdir distPath
    }

    commandLine(
            'makeself',
            buildLinuxPath,
            "${distPath}/${packageName}.run",
            'Hyperbox Client',
            './client-installer.sh'
    )
}

task distLinuxZip(type: Zip) {
    archiveName = "${packageName}.zip"
    destinationDir = distPath.toFile()

    from buildLinuxPath.toFile()
}

task dist {
    dependsOn distLinuxInstall, distLinuxZip
}
